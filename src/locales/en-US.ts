export default {
  common: {
    confirm: 'Confirm',
    cancel: 'Cancel',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    add: 'Add',
    search: 'Search',
    loading: 'Loading',
    success: 'Success',
    error: 'Error',
    openInNewWindow: 'Open in New Window',
    inputMessage: 'Enter message or command',
    send: 'Send',
    noData: 'No Data',
    noContent: 'No Content Found',
  },
  theme: {
    light: 'Light',
    dark: 'Dark',
    auto: 'Auto',
    transparent: 'Transparent',
    purple: 'Purple',
    custom: 'Custom Theme',
  },
  app: {
    moviepilot: 'MoviePilot',
    recommend: 'Recommend',
    subscribeMovie: 'Movie Subscription',
    subscribeTv: 'TV Subscription',
    settings: 'Settings',
    language: 'Language',
    selectLanguage: 'Select Language',
    logout: 'Logout',
    restarting: 'Restarting...',
    confirmRestart: 'Confirm Restart?',
    restartTip: 'After restarting, you will be logged out and need to log in again.',
  },
  login: {
    wallpapers: 'wallpapers',
    username: 'Username',
    password: 'Password',
    otpCode: 'OTP Code',
    stayLoggedIn: 'Stay Logged In',
    login: 'Login',
    networkError: 'Login failed, please check your network connection!',
    authFailure: 'Login failed, please check your username, password or OTP code!',
    permissionDenied: 'Login failed, you do not have permission to access!',
    serverError: 'Login failed, server error!',
    loginFailed: 'Login Failed',
    checkCredentials: 'Please check your username, password or OTP code!',
  },
  menu: {
    start: 'Start',
    discovery: 'Discovery',
    subscribe: 'Subscribe',
    organize: 'Organize',
    system: 'System',
  },
  navItems: {
    dashboard: 'Dashboard',
    mediaInfo: 'Media Library',
    recommend: 'Recommend',
    site: 'Sites',
    search: 'Search',
    searchResult: 'Search Results',
    download: 'Download',
    movieSubscribe: 'Movie Subscription',
    tvSubscribe: 'TV Subscription',
    history: 'History',
    transfer: 'Transfer',
    rename: 'Rename',
    statistic: 'Statistics',
    setting: 'Settings',
    plugin: 'Plugins',
    user: 'Users',
    about: 'About',
    explore: 'Explore',
    movie: 'Movies',
    tv: 'TV Shows',
    workflow: 'Workflow',
    calendar: 'Calendar',
    downloadManager: 'Download Manager',
    mediaOrganize: 'Media Organizer',
    fileManager: 'File Manager',
    pluginManager: 'Plugins',
    siteManager: 'Site Manager',
    userManager: 'User Manager',
    settings: 'Settings',
  },
  settingTabs: {
    system: {
      title: 'System',
      description: 'Basic settings, downloaders (Qbittorrent, Transmission), media servers (Emby, Jellyfin, Plex)',
    },
    directory: {
      title: 'Storage & Directories',
      description: 'Download directories, media library directories, organization, metadata scraping',
    },
    site: {
      title: 'Sites',
      description: 'Site synchronization, site data refresh, site reset',
    },
    rule: {
      title: 'Rules',
      description: 'Custom rules, priority rule groups, download rules',
    },
    search: {
      title: 'Search & Download',
      description: 'Search data sources (TheMovieDb, Douban, Bangumi), download task labels, search sites',
    },
    subscribe: {
      title: 'Subscription',
      description: 'Subscription sites, subscription modes, subscription rules, upgrade rules',
    },
    scheduler: {
      title: 'Services',
      description: 'Scheduled tasks',
    },
    notification: {
      title: 'Notifications',
      description: 'Notification channels (WeChat, Telegram, Slack, SynologyChat, VoceChat, WebPush), message scope',
    },
    words: {
      title: 'Word Lists',
      description: 'Custom recognition words, custom groups, custom placeholders, file organization filter words',
    },
    about: {
      title: 'About',
      description: 'Software version',
    },
  },
  subscribeTabs: {
    movie: {
      mysub: 'My Subscriptions',
      popular: 'Popular',
    },
    tv: {
      mysub: 'My Subscriptions',
      popular: 'Popular',
      share: 'Shared',
    },
  },
  pluginTabs: {
    installed: 'My Plugins',
    market: 'Plugin Market',
  },
  discoverTabs: {
    themoviedb: 'TheMovieDb',
    douban: 'Douban',
    bangumi: 'Bangumi',
  },
  user: {
    admin: 'Administrator',
    normalUser: 'Normal User',
    profile: 'Profile',
    systemSettings: 'System Settings',
    siteAuth: 'User Authentication',
    helpDocs: 'Help Docs',
    restart: 'Restart',
  },
  nav: {
    more: 'More',
  },
  notification: {
    center: 'Notification Center',
    markRead: 'Mark as Read',
    empty: 'No Notifications',
  },
  shortcut: {
    title: 'Shortcuts',
    recognition: {
      title: 'Recognition',
      subtitle: 'Name Recognition Test',
    },
    rule: {
      title: 'Rules',
      subtitle: 'Rule Test',
    },
    log: {
      title: 'Logs',
      subtitle: 'Real-time Logs',
    },
    network: {
      title: 'Network',
      subtitle: 'Speed & Connectivity Test',
    },
    system: {
      title: 'System',
      subtitle: 'Health Check',
    },
    message: {
      title: 'Messages',
      subtitle: 'Message Center',
    },
  },
  workflow: {
    components: 'Action Components',
    clickToAdd: 'Click to Add',
    dragToCanvas: 'Drag to Canvas',
    tapComponentHint: 'Tap component to add to canvas',
    dragComponentHint: 'Drag components to canvas',
  },
  dashboard: {
    storage: 'Storage Space',
    mediaStatistic: 'Media Statistics',
    weeklyOverview: 'Recent Additions',
    speed: 'Real-time Speed',
    scheduler: 'Background Tasks',
    cpu: 'CPU',
    memory: 'Memory',
    library: 'My Media Library',
    playing: 'Continue Watching',
    latest: 'Recently Added',
    settings: 'Dashboard Settings',
    chooseContent: 'Choose content you want to display on the page',
    adaptiveHeight: 'Adaptive Component Height',
  },
  media: {
    movie: 'Movie',
    tv: 'TV Show',
  },
  subscribe: {
    normalSub: 'Subscription',
    versionSub: 'Version Upgrade',
    addSuccess: '{name} added successfully!',
    addFailed: 'Failed to add {name}: {message}!',
    cancelSuccess: 'Subscription cancelled!',
    cancelFailed: 'Failed to cancel subscription: {message}!',
    filterSubscriptions: 'Filter Subscriptions',
    name: 'Name',
    searchShares: 'Search Subscription Shares',
    keyword: 'Keyword',
    noShareData:
      'No shared subscription data available, data sharing is not enabled or the server cannot be connected.',
    noPopularData:
      'No popular subscription data available, data sharing is not enabled or the server cannot be connected.',
    noFilterData: 'No matching content found. Please change the filter criteria.',
    noSubscribeData: 'Please search to add movie or TV show subscriptions.',
    sharer: 'Shared by',
    follow: 'Follow',
    unfollow: 'Unfollow',
    recognitionWords: 'Recognition Words',
    cancelShare: 'Cancel Share',
    usageCount: 'Used {count} times',
  },
  recommend: {
    all: 'All',
    categoryMovie: 'Movies',
    categoryTV: 'TV Shows',
    categoryAnime: 'Anime',
    categoryRankings: 'Rankings',
    trendingNow: 'Trending Now',
    nowShowing: 'Now Showing',
    bangumiDaily: 'Bangumi Daily',
    tmdbHotMovies: 'TMDB Hot Movies',
    tmdbHotTVShows: 'TMDB Hot TV Shows',
    doubanHotMovies: 'Douban Hot Movies',
    doubanHotTVShows: 'Douban Hot TV Shows',
    doubanHotAnime: 'Douban Hot Anime',
    doubanNewMovies: 'Douban New Movies',
    doubanNewTVShows: 'Douban New TV Shows',
    doubanTop250: 'Douban Movie TOP250',
    doubanChineseTVRankings: 'Douban Chinese TV Rankings',
    doubanGlobalTVRankings: 'Douban Global TV Rankings',
    noCategoryContent: 'No content to display in this category',
    configureContent: 'Configure Content',
    customizeContent: 'Customize Content',
    selectContentToDisplay: 'Select the content you want to display',
    selectAll: 'Select All',
    selectNone: 'Select None',
  },
  discover: {
    setTabOrder: 'Set Tab Order',
    dragToReorder: 'Drag to reorder tabs',
  },
  downloading: {
    noDownloader: 'No Downloaders',
    configureDownloader: 'Please configure and enable downloaders in settings first.',
  },
  resource: {
    searchResults: 'Resource Search Results',
    keyword: 'Keyword',
    title: 'Title',
    year: 'Year',
    season: 'Season',
    switchingView: 'Switching View',
    backToHome: 'Back to Home',
    searching: 'Searching, please wait...',
    noData: 'No Data',
    noResourceFound: 'No resources found',
  },
  browse: {
    actor: 'Actor',
  },
  appcenter: {
    others: 'Others',
  },
  notFound: {
    title: 'Page Not Found ⚠️',
    description: 'The page you are trying to access does not exist. Please check the URL.',
    backButton: 'Back',
  },
  torrent: {
    sortDefault: 'Default',
    sortSite: 'Site',
    sortSize: 'Size',
    sortSeeder: 'Seeders',
    filterSite: 'Site',
    filterSeason: 'Season',
    filterFreeState: 'Promotion',
    filterVideoCode: 'Video Code',
    filterEdition: 'Quality',
    filterResolution: 'Resolution',
    filterReleaseGroup: 'Release Group',
    clearFilters: 'Clear',
    selectAll: 'Select All',
    loadMore: 'Load More',
    noMatchingResults: 'No matching results',
  },
  calendar: {
    episode: 'Episode {number}',
  },
  storage: {
    usedPercent: 'Used {percent}%',
  },
  site: {
    noSites: 'No Sites',
    sitesWillBeShownHere: 'Added and supported sites will be displayed here.',
  },
  message: {
    loadMore: 'Load More',
    noMoreData: 'No More Data',
  },
  logging: {
    level: 'Level',
    time: 'Time',
    program: 'Program',
    content: 'Content',
    refreshing: 'Refreshing',
  },
  moduleTest: {
    normal: 'Normal',
    disabled: 'Disabled',
    error: 'Error',
  },
  nameTest: {
    recognize: 'Recognize',
    recognizing: 'Recognizing...',
    recognizeAgain: 'Recognize Again',
    title: 'Title',
    subtitle: 'Subtitle',
  },
  netTest: {
    notTested: 'Not Tested',
    testing: 'Testing...',
    normal: 'Normal',
  },
  ruleTest: {
    test: 'Test',
    testing: 'Testing...',
    testAgain: 'Test Again',
    title: 'Title',
    subtitle: 'Subtitle',
    ruleGroup: 'Rule Group',
    priority: 'Priority: {value}',
    noPriorityRule: 'No priority rule matched!',
  },
  setting: {
    about: {
      title: 'About MoviePilot',
      softwareVersion: 'Software Version',
      frontendVersion: 'Frontend Version',
      authVersion: 'Auth Resource Version',
      indexerVersion: 'Indexer Resource Version',
      configDir: 'Config Directory',
      dataDir: 'Data Directory',
      timezone: 'Timezone',
      latest: 'Latest',
      support: 'Support',
      documentation: 'Documentation',
      feedback: 'Feedback',
      channel: 'Release Channel',
      versions: 'Software Versions',
      latestVersion: 'Latest Version',
      currentVersion: 'Current Version',
      viewChangelog: 'View Changelog',
      changelog: 'Changelog',
    },
    system: {
      basicSettings: 'Basic Settings',
      basicSettingsDesc: 'Configure server global functions.',
      appDomain: 'Access Domain',
      appDomainHint: 'Used to add quick jump links when sending notifications',
      wallpaper: 'Background Wallpaper',
      wallpaperHint: 'Choose the source of the login page background',
      recognizeSource: 'Recognition Data Source',
      recognizeSourceHint: 'Set the default media info recognition data source',
      mediaServerSyncInterval: 'Media Server Sync Interval',
      mediaServerSyncIntervalHint: 'Time interval for syncing media server data to local',
      hours: 'hours',
      required: 'Required field, please fill in',
      numbersOnly: 'Only numbers are supported, please do not enter other characters',
      minInterval: 'Interval cannot be less than 1 hour',
      apiToken: 'API Token',
      apiTokenHint: 'Set the token value used when external requests access MoviePilot API',
      apiTokenMinChars: 'Cannot be less than 16 characters',
      apiTokenRequired: 'Required field; please enter API Token',
      apiTokenLength: 'API Token must be at least 16 characters',
      githubToken: 'Github Token',
      githubTokenFormat: 'ghp_**** or github_pat_****',
      githubTokenHint: 'Used to increase the rate limit threshold when plugins access Github API',
      ocrHost: 'OCR Server',
      ocrHostHint: 'Used for site check-in, updating site cookies and other captcha recognition',
      advancedSettings: 'Advanced Settings',
      advancedSettingsDesc: 'System advanced settings, only need to be adjusted in special cases',
      downloaders: 'Downloaders',
      downloadersDesc: 'Only the default downloader will be used by default.',
      mediaServers: 'Media Servers',
      mediaServersDesc: 'All enabled media servers will be used.',
      trimeMedia: 'TrimeMedia',
      system: 'System',
      media: 'Media',
      network: 'Network',
      log: 'Log',
      lab: 'Lab',
      reloadSuccess: 'System configuration has taken effect',
      reloadFailed: 'Failed to reload system!',
      downloaderSaveSuccess: 'Downloader settings saved successfully',
      downloaderSaveFailed: 'Failed to save downloader settings!',
      defaultDownloaderNotice: 'No default downloader set, [{name}] has been set as the default downloader',
      mediaServerSaveSuccess: 'Media server settings saved successfully',
      mediaServerSaveFailed: 'Failed to save media server settings!',
      saveFailed: 'Failed to save settings: {message}!',
      basicSaveSuccess: 'Basic settings saved successfully',
      advancedSaveSuccess: 'Advanced settings saved successfully',
      copySuccess: 'Copied to clipboard!',
      copyFailed: 'Copy failed: browser may not support or user blocked!',
      copyError: 'Copy failed!',
      reloading: 'Applying configuration...',
    },
    site: {
      siteSync: 'Site Synchronization',
      siteSyncDesc: 'Quickly sync site data from CookieCloud.',
      enableLocalCookieCloud: 'Enable Local CookieCloud Server',
      enableLocalCookieCloudHint:
        'Use built-in CookieCloud service to sync site data, service address: http://localhost:3000/cookiecloud',
      serviceAddress: 'Service Address',
      serviceAddressPlaceholder: 'https://movie-pilot.org/cookiecloud',
      serviceAddressHint: 'Remote CookieCloud service address, format: https://movie-pilot.org/cookiecloud',
      userKey: 'User KEY',
      userKeyHint: 'User KEY generated by CookieCloud browser plugin',
      e2ePassword: 'End-to-End Encryption Password',
      e2ePasswordHint: 'End-to-end encryption password generated by CookieCloud browser plugin',
      autoSyncInterval: 'Auto Sync Interval',
      autoSyncIntervalHint:
        'Time interval for automatically syncing site cookies from CookieCloud server to MoviePilot',
      syncBlacklist: 'Sync Domain Blacklist',
      syncBlacklistPlaceholder: 'Multiple domains, separated by commas',
      syncBlacklistHint: 'CookieCloud sync domain blacklist, multiple domains separated by commas',
      userAgent: 'Browser User-Agent',
      userAgentHint: 'User-Agent of the browser with CookieCloud plugin',
      siteDataRefresh: 'Site Data Refresh',
      siteDataRefreshInterval: 'Site Data Refresh Interval',
      siteDataRefreshIntervalHint: 'Time interval for refreshing site user upload/download data',
      readSiteMessage: 'Read Site Messages',
      readSiteMessageHint: 'Read site messages and send notifications when refreshing data',
      siteReset: 'Site Reset',
      confirmReset: 'Confirm to delete all site data and resync.',
      confirmResetHint:
        'Delete all site data and resync from CookieCloud. Please clear all related site settings before this operation.',
      resetSites: 'Reset Site Data',
      resettingSites: 'Resetting...',
      syncInterval: {
        hourly: 'Hourly',
        every6Hours: 'Every 6 Hours',
        every12Hours: 'Every 12 Hours',
        daily: 'Daily',
        weekly: 'Weekly',
        monthly: 'Monthly',
        never: 'Never',
      },
      saveSuccess: 'Site settings saved successfully',
      saveFailed: 'Failed to save site settings!',
      resetSuccess: 'Sites reset successfully, please wait for CookieCloud sync to complete!',
      resetFailed: 'Failed to reset sites!',
    },
    notification: {
      channels: 'Notification Channels',
      channelsDesc: 'Set message sending channel parameters.',
      scope: 'Notification Scope',
      scopeDesc: 'Corresponding message types will only be sent to specified users.',
      messageType: 'Message Type',
      scopeRange: 'Scope',
      operationUserOnly: 'Operation User Only',
      adminOnly: 'Admin Only',
      userAndAdmin: 'Operation User and Admin',
      allUsers: 'All Users',
      sendTime: 'Notification Send Time',
      sendTimeDesc: 'Set the time range for sending messages.',
      startTime: 'Start Time',
      endTime: 'End Time',
      saveSuccess: 'Notification settings saved successfully',
      saveFailed: 'Failed to save notification settings!',
      switchSaveSuccess: 'Message type switches saved successfully',
      switchSaveFailed: 'Failed to save message type switches!',
      timeSaveSuccess: 'Notification send time saved successfully',
      timeSaveFailed: 'Failed to save notification send time!',
      channel: 'Notification',
      wechat: 'WeChat',
      resourceDownload: 'Resource Download',
      mediaImport: 'Media Import',
      subscription: 'Subscription',
      site: 'Site',
      mediaServer: 'Media Server',
      manualProcess: 'Manual Process',
      plugin: 'Plugin',
      other: 'Other',
    },
    words: {
      customIdentifiers: 'Custom Identifiers',
      identifiersDesc: 'Add rules to preprocess torrent names or file names to correct identification.',
      identifiersPlaceholder: 'Support regular expressions, special characters need \\ escape, one line for each rule',
      identifiersHint: 'Support regular expressions, special characters need \\ escape, one line for each rule',
      formatTitle: 'Supported configuration formats (mind the spaces):',
      formatContent:
        'Block words\n' +
        'Word to replace => Replacement\n' +
        'Front word <> Back word >> Episode offset (EP)\n' +
        'Word to replace => Replacement && Front word <> Back word >> Episode offset (EP)\n' +
        'Replacement format supports: [[tmdbid/doubanid=xxx;type=movie/tv;s=xxx;e=xxx]] to directly specify TMDBID/Douban ID, where s and e are season and episode numbers (optional)',
      identifierSaveSuccess: 'Custom identifiers saved successfully',
      identifierSaveFailed: 'Failed to save custom identifiers!',

      customReleaseGroups: 'Custom Release/Subtitle Groups',
      releaseGroupsDesc: 'Add release/subtitle groups that cannot be identified.',
      releaseGroupsPlaceholder:
        'Support regular expressions, special characters need \\ escape, one line for each group',
      releaseGroupsHint: 'Support regular expressions, special characters need \\ escape, one line for each group',
      releaseGroupSaveSuccess: 'Custom release/subtitle groups saved successfully',
      releaseGroupSaveFailed: 'Failed to save custom release/subtitle groups!',

      customization: 'Custom Placeholders',
      customizationDesc: 'Add custom placeholder regex patterns, use {customization} in rename format.',
      customizationPlaceholder:
        'Support regular expressions, special characters need \\ escape, separate multiple matches with new lines',
      customizationHint:
        'Support regular expressions, special characters need \\ escape, separate multiple matches with new lines',
      customizationSaveSuccess: 'Custom placeholders saved successfully',
      customizationSaveFailed: 'Failed to save custom placeholders!',

      transferExcludeWords: 'File Organization Block Words',
      excludeWordsDesc: 'Files or directories containing block words will not be organized.',
      excludeWordsPlaceholder:
        'Support regular expressions, special characters need \\ escape, one line for each block word',
      excludeWordsHint: 'Support regular expressions, special characters need \\ escape, one line for each block word',
      excludeWordsSaveSuccess: 'File organization block words saved successfully',
      excludeWordsSaveFailed: 'Failed to save file organization block words!',
    },
    search: {
      basicSettings: 'Basic Settings',
      basicSettingsDesc: 'Set data sources, rule groups and other basic information.',
      recognizeSource: 'Recognition Data Source',
      recognizeSourceDesc:
        'Default is TMDB. Douban is usually more friendly for Chinese works, but some foreign works have incomplete information.',
      themoviedb: 'TheMovieDb',
      douban: 'Douban',
      filterRuleGroup: 'Filter Rule Group',
      filterRuleGroupDesc: 'Set filter rule groups used during download process.',
      downloadLabel: 'Download Task Label',
      downloadLabelDesc: 'Download labels in downloader, used for filtering queries.',
      downloadLabelHint: 'Support multiple labels, separated by commas',
      downloadSite: 'Search Sites',
      downloadSiteDesc: 'Set site scope for specific category searches.',
      movieSites: 'Movie Sites',
      tvSites: 'TV Show Sites',
      animeSites: 'Anime Sites',
      saveSites: 'Save Sites',
      saveSuccess: 'Search settings saved successfully',
      saveFailed: 'Failed to save search settings!',
      saveRuleFailed: 'Failed to save rules!',
      movieCategory: 'Movies',
      tvCategory: 'TV Shows',
      animeCategory: 'Anime',
      downloadUser: 'Remote Search Auto Download User List',
      downloadUserHint:
        'Whether to automatically download when searching with Telegram, WeChat, etc., comma separated, set to all to represent all users auto-download',
      multipleNameSearch: 'Multiple Name Resource Search',
      multipleNameSearchHint:
        'Search site resources using multiple names (Chinese, English, etc.) and merge search results, will increase site access frequency',
      downloadSubtitle: 'Download Site Subtitles',
      downloadSubtitleHint: 'Check if site resources have separate subtitle files and download them automatically',
    },
    directory: {
      storage: 'Storage',
      storageDesc: 'Set up local or cloud storage.',
      directory: 'Directory',
      directoryDesc: 'Set up media file organization directory structure, matching in sequence.',
      organizeAndScrap: 'Organization & Scraping',
      organizeAndScrapDesc: 'Set rename format, scraping options, etc.',
      scrapSource: 'Scraping Data Source',
      scrapSourceHint: 'Metadata source for scraping',
      movieRenameFormat: 'Movie Rename Format',
      movieRenameFormatHint:
        'Using Jinja2 syntax, format reference: https://jinja.palletsprojects.com/en/3.0.x/templates',
      tvRenameFormat: 'TV Show Rename Format',
      tvRenameFormatHint: 'Using Jinja2 syntax, format reference: https://jinja.palletsprojects.com/en/3.0.x/templates',
      saveSuccess: 'Storage settings saved successfully',
      saveFailed: 'Failed to save storage settings!',
      directorySaveSuccess: 'Directory settings saved successfully',
      directorySaveFailed: 'Failed to save directory settings!',
      organizeSaveSuccess: 'Organization options saved successfully',
      organizeSaveFailed: 'Failed to save organization options!',
      duplicateDirectoryName: 'Duplicate directory names exist! Cannot save, please modify!',
    },
    rule: {
      customRules: 'Custom Rules',
      customRulesDesc: 'Custom priority rule items',
      priorityRuleGroups: 'Priority Rule Groups',
      priorityRuleGroupsDesc: 'Preset priority rule groups for use in search and subscription.',
      downloadRules: 'Download Rules',
      downloadRulesDesc: 'Prioritize downloads when multiple resources match.',
      currentPriorityRules: 'Current Download Priority Rules',
      currentPriorityRulesHint: 'Higher priority for items at the front, unselected items are not included in sorting',
      saveSuccess: 'Custom rules saved successfully',
      saveFailed: 'Failed to save custom rules!',
      groupSaveSuccess: 'Priority rule groups saved successfully',
      groupSaveFailed: 'Failed to save priority rule groups!',
      prioritySaveSuccess: 'Priority rules saved successfully',
      prioritySaveFailed: 'Failed to save priority rules!',
      emptyRuleId: 'Rules with empty IDs exist! Cannot save, please modify!',
      emptyRuleName: 'Rules with empty names exist! Cannot save, please modify!',
      duplicateRuleId: 'Duplicate rule IDs exist! Cannot save, please modify!',
      duplicateRuleName: 'Duplicate rule names exist! Cannot save, please modify!',
      emptyGroupName: 'Rule groups with empty names exist! Cannot save, please modify!',
      duplicateGroupName: 'Duplicate rule group names exist! Cannot save, please modify!',
      copySuccess: 'Copied to clipboard!',
      copyFailed: 'Copy failed: browser may not support or user blocked!',
      copyError: 'Copy failed!',
      importCustomRules: 'Import Custom Rules',
      importRuleGroups: 'Import Priority Rule Groups',
      importFailed: 'Failed to import rules! Cannot parse input data!',
      importUnknownType: 'Failed to import rules! Unknown data type!',
      duplicateValue: 'Duplicate values exist',
      importNoId: 'Import failed! Found rules without IDs, may belong to priority rule groups!',
      importHasId: 'Import failed! Found rules with IDs, may belong to custom rules!',
      torrentPriority: {
        torrent: 'Resource Priority',
        site: 'Site Priority',
        upload: 'Site Upload Amount',
        seeder: 'Resource Seeders',
      },
    },
    scheduler: {
      scheduledTasks: 'Scheduled Tasks',
      scheduledTasksDesc:
        'Includes system built-in services and plugin-provided services. Manual execution will not affect the normal schedule of tasks.',
      provider: 'Provider',
      taskName: 'Task Name',
      taskStatus: 'Task Status',
      nextRunTime: 'Next Run Time',
      execute: 'Execute',
      noServices: 'No background services',
      submitSuccess: 'Task execution request submitted successfully!',
      status: {
        running: 'Running',
        stopped: 'Stopped',
        waiting: 'Waiting',
      },
    },
    subscribe: {
      basicSettings: 'Basic Settings',
      basicSettingsDesc: 'Set subscription mode, cycle and other basic settings',
      mode: 'Subscription Mode',
      modeHint: 'Auto: automatically crawl site homepage, Site RSS: subscribe via site RSS link',
      rssInterval: 'Site RSS Interval',
      rssIntervalHint: 'Set the site RSS running cycle, effective when subscription mode is `Site RSS`',
      filterRuleGroup: 'Subscription Priority Rule Group',
      filterRuleGroupHint: 'Filter subscriptions based on selected filter rule groups',
      bestVersionRuleGroup: 'Version Upgrade Priority Rule Group',
      bestVersionRuleGroupHint: 'Filter version upgrade subscriptions based on selected filter rule groups',
      timedSearch: 'Subscription Scheduled Search',
      timedSearchHint: 'Search all sites every 24 hours to supplement resources that may be missed by subscription',
      checkLocalMedia: 'Check Local Media Library',
      checkLocalMediaHint: 'Check if resources exist on storage disk to avoid duplicate downloads',
      subscribeSites: 'Subscription Sites',
      subscribeSitesDesc: 'Only selected sites will be used in subscription.',
      saveSuccess: 'Subscription sites saved successfully',
      saveFailed: 'Failed to save subscription sites!',
      settingsSaveSuccess: 'Subscription basic settings saved successfully',
      settingsSaveFailed: 'Failed to save subscription basic settings!',
      modes: {
        auto: 'Auto',
        rss: 'Site RSS',
      },
      intervals: {
        min5: '5 minutes',
        min10: '10 minutes',
        min20: '20 minutes',
        min30: '30 minutes',
        hour1: '1 hour',
        hour12: '12 hours',
        day1: '1 day',
      },
    },
  },
}
